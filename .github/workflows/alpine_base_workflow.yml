name: Fedora base image workflow

on:
  workflow_call:
    inputs:
      distro:
        required: true
        type: string
      registry:
        required: true
        type: string
      tarball:
        required: true
        type: string
      tarball_uri:
        required: true
        type: string
      tarball_checksum_uri:
        required: true
        type: string
      tarball_checksum_file:
        required: true
        type: string
      tarball_gpg_key:
        required: true
        type: string
      tarball_gpg_uri:
        required: true
        type: string
      tarball_signature:
        required: true
        type: string
      tarball_signature_uri:
        required: true
        type: string
        
env:
  IMG_URI: ${{ inputs.tarball_uri }}/${{ inputs.tarball }}

jobs:
  build-scan-push-base-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        type:
          - base
    steps:
      - uses: actions/checkout@v3

      - name: Download container tarball
        run: curl -O ${{ env.IMG_URI }}

      - name: Download CHECKSUM file
        run: curl -O ${{ inputs.tarball_checksum_uri }}/${{ inputs.tarball_checksum_file }}
      
      - name: Import gpg key
        if: ${{ inputs.tarball_gpg_key != 'NA' }}
        run: curl ${{ inputs.tarball_gpg_uri }}/${{ inputs.tarball_gpg_key }} | gpg --import

      - name: Download tarball signature file
        if: ${{ inputs.tarball_signature != 'NA' }}
        run: curl -O ${{ inputs.tarball_signature_uri }}/${{ inputs.tarball_signature }}

      - name: Verify tarball sha256
        run: sha256sum -c ${{ inputs.tarball_checksum_file }} --ignore-missing

      - name: Verify tarball signature
        if: ${{ inputs.tarball_gpg_key != 'NA' }}
        run: gpg --verify ./${{ inputs.tarball_signature }} ${{ inputs.tarball }}

      - name: Rename alpine tarball
        run: mv ${{ inputs.tarball }}  ${{ inputs.distro }}/alpine.tar.gz

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Container image
        run: docker build ./${{ inputs.distro }}/ --file ./${{ inputs.distro }}/Dockerfile.${{ inputs.distro }}-${{ matrix.type }} --tag ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.distro }}-${{ matrix.type }}:${{ github.run_id }} --tag ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.distro }}-${{ matrix.type }}:latest

      - name: Run the Anchore scan on the image
        uses: anchore/scan-action@b08527d5ae7f7dc76f9621edb6e49eaf47933ccd
        with:
          image: "${{ inputs.registry }}/${{ github.repository }}/${{ inputs.distro }}-${{ matrix.type }}:${{ github.run_id }}"
          acs-report-enable: true
          fail-build: true

      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Push the image
        run: docker push --all-tags ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.distro }}-${{ matrix.type }}
